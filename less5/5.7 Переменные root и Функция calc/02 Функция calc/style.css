/* переменные */
:root {
    --colNums: 4;
}

/*  общение оформление */
.container {
    background-color: #eee;
    border: 3px solid tomato;
}

.elem {
    border: 3px solid green;
    background-color: #555;
    color: aliceblue;
    text-align: center;
    margin: 0 auto; /* центрирование блока */
}

/*  ширина элемента 1 */
.elem_width1 {
    /* Задача. Мы не знаем ширину родителя, нам нужно ширину дочернего элемента сделать на 80px меньше чем у родителя */
    width: calc(100% - 80px);
    /* функция из своей максимальной ширины (100%, которые она видимо автоматически переводит в пиксели) вычитает 80px */
    /* теперь как бы мы экран не уменьшали, у нас ширина будет всегда ровно на 80 пикселей меньше */
    /* важное правило - перед и после математического знака необходимо ставить пробел */

    /* width: calc(100%-80px); */
    /* функция не работает так как нет пробелов, при этом никаких ошибок не проявляется */
    /* + и - точно не работают, а вот * и / работают,  но рекомендуется ставить пробелы всегда */
    /* так же нельзя делить на ноль (100%/0)*/
}

/*  ширина элемента 2 */
.elem_width2 {
    /* используем переменную которую определили в самом верху в псевдоклассе root: */
    width: calc(100% / var(--colNums));
    /* если --colNums: 4 , то разделив 100% на 4 у нас поместится 4 таких элемента на страницу */
}

/* Вопрос: */
/* Сопоставьте значения из двух списков */
/* font-size: calc(24px / 2); -> 12px*/
/* height: calc(30% + 50px); -> 30% плюс 50px */
/* width: calc(100% - 80px); -> 100% минус 80px */
/* padding: calc(0.3em * 4); -> 1.2em */

/* Вопрос: */
/* Какие из операторов должны быть отделены пробелами? */
/* Ответ: + и - */

/* Вопрос: */
/* Можно ли использовать переменные вложенные в функцию calc, как в примере ниже? */
.foo { /* дописываем этот класс к 3-му элементу и проверяем результат */
    --widthA: 100px;
    --widthB: calc(var(--widthA) / 2); /* 100/2=50 */
    --widthC: calc(var(--widthB) / 2);  /* 50/2=25 */
    width: var(--widthC); /* исследование -> элемент имеет ширину 25 */
}
/* Ответ: Да */

/* Иван обнаружил, что цвет ссылок меняется, когда они являются посещёнными. Какой CSS-код необходимо задать, чтобы цвет посещённых и не посещённых ссылок был одним и тем же? */

/* Ответ: */
a:link, a:visited{color: black};
/* Псевдокласс :link используется для оформления ссылок, которые пользователь ещё никогда не открывал (в рамках текущего домена). */
/* https://doka.guide/css/link/ */
/* Псевдокласс :visited добавляется ссылкам, по которым уже переходил пользователь. */
/* https://doka.guide/css/visited/ */
