// Когда происходит событие,  браузер создаёт объект СОБЫТИЕ, записывает в него детали события,  и возвращает его в качестве Аргумента функции обработчика. И  мы можем этот объект использовать: получать из него разную полезную информацию.

document.querySelector('.btn').onclick = function (event) {
    // * event в качестве параметра функции - это объект события, который вернёт браузер и который мы можем использовать и с которым мы можем работать. Это - НЕ внешняя переменная для функции (как обычно принято для функций).
    // Здесь этот параметр будет содержать все детали о событии

    console.log(event);
    // Получили:Разворачивающийся объект PointerEvent {isTrusted: true, pointerId: 2, width: 1, height: 1, pressure: 0, …}

    console.log(event.type); // Получили: click.  То есть тип события - клик левой кнопки мыши

    console.log(this); // Получили: <button class="btn">Кнопка</button>
    // this -  обращение к контексту. Это - тот элемент, на котором произошло событие

    console.log(event.currentTarget); // Получили: <button class="btn">Кнопка</button>
    // получили то же самое, что и в предыдущей строке. Но иногда с помощью можно достучаться до того элемента, на котором сработало событие, именно в тех случаях, когда контекст изменился, и контекст он уже не указывает на сам элемент, на котором произошло событие. Поэтому это очень часто применяемый способ.

    console.log(event.clientX); // 43
    console.log(event.clientY); // 27
    // Это координаты по x и y куда кликнул клиент. Они меняются при каждом нажатии.
    // Рекомендуется развернуть объект в консоли и посмотреть сколько там различных свойств
}



