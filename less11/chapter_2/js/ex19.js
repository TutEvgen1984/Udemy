// Пример 19 - Всплывающая подсказка

let tooltipElem; // tooltip - подсказка (англ.). Инициализировали переменную.

document.onmouseover = function (e) { // повешали событие на весь документ, тип события - наведение курсоры мышки. это событие будет срабатывать каждый раз когда мышка наводится на какой нибудь элемент

    let target = e.target; // переменная цель

    let tooltipHtml = target.dataset.tooltip; // в переменную помешаем текст, содержащийся у цели внутри атрибута data-tooltip

    if (!tooltipHtml) return; // если tooltipHtml не существует, то выходим из обработчика.  это означает, что мы наелись на элемент, у которого нет этой подсказки

    tooltipElem = document.createElement('div'); //  для начала создадим пустой div

    tooltipElem.className = "tooltip"; // div'у задали класс.  так как там будет всего 1 класса, то мы можем использовать className (не classList.add)
    // в CSS прописано, что у класса tooltip: position { fixed }

    tooltipElem.innerHTML = tooltipHtml; // div'у в качестве наполнения задали текст, хранящийся в переменной tooltipHtml (см. выше)

    document.body.append(tooltipElem) //  вставляем в body в конец наш созданный div

    let coords = target.getBoundingClientRect()
    // console.log(coords);
    // Получили: DOMRect {x: 13, y: 240, width: 70.484375, height: 37, top: 240, …} (открывающийся объект)
    // Статья: https://doka.guide/tools/coordinates/

    // рассчитаем координаты для левой позиции:
    let left = coords.left + (target.offsetWidth - tooltipElem.offsetWidth) / 2 // делим на 2 чтобы найти середину. offset - смещение (англ.). Здесь мы высчитываем координаты слева так хитро, чтобы середина появляющегося div'a находилась точно по центру кнопки на которую мы нажали

    if (left < 0) left = 5; // если мы рассчитали что наши координаты получилось отрицательными и вышли за край экрана, то делаем их равными даже не 0, а 5, и оно будет впритык к левому краю с небольшим отступом

    tooltipElem.style.left = left + 'px' // задаём продолжение в числах + 'px' чтобы получилось например 240px

    // теперь рассчитаем координаты для верхней позиции:
    let top = coords.top - tooltipElem.offsetHeight - 5; // -5 чтобы сделать небольшой отступ

    if (top < 0) top = coords.top + target.offsetHeight + 5; //  если удалить все теги р, то тогда если этой строки не будет, то наша подсказка встанет выше экрана где места нету, а с помощью этого условия оно станет намеренно ниже

    tooltipElem.style.top = top + 'px';
    // теперь div будет проявляться сверху ведёт, а не низу

}

//  после отведения мышки подсказки остаются на странице и перекрывают друг друга, чтобы этого не было пропишем стирание этих подсказок
document.onmouseout = function (e) { // при отведении курсора мышки с кнопки есть отдельное событие
    if (tooltipElem) { // если уходя с кнопки tooltipElem существует, то:
        tooltipElem.remove(); // удаляем его
        tooltipElem = null; // делаем равным null чтобы его сбросить
    }
}

