:root {
    --color1: #05b1b1;
    --color2: #52339a;
}

/* Цвет: */
.color1 {
    color: var(--color1);
}

.color2 {
    color: var(--color2);
}

.bg1 {
    background-color: var(--color1);
}

.bg2 {
    background-color: var(--color2);
}

header,
footer,
section {
    padding: 100px 0;
}

header {
    padding: 200px 0;
    /* для header установили вн. отступ побольше */
}

/* создадим градиент https://www.colorzilla.com/gradient-editor/ */
/* Ставим галочку Maximize compatibility */
header,
footer {
    background: url(../img/pattern.png), var(--color1);
    /* этот цвет сработает если градиент не сработает */
    background: url(../img/pattern.png), -moz-linear-gradient(left, var(--color1) 0%, var(--color2) 100%);
    background: url(../img/pattern.png), -webkit-gradient(linear, left top, right top, color-stop(0%, var(--color1)), color-stop(100%, var(--color2)));
    background: url(../img/pattern.png), -webkit-linear-gradient(left, var(--color1) 0%, var(--color2) 100%);
    background: url(../img/pattern.png), -o-linear-gradient(left, var(--color1) 0%, var(--color2) 100%);
    background: url(../img/pattern.png), -ms-linear-gradient(left, var(--color1) 0%, var(--color2) 100%);
    background: url(../img/pattern.png), linear-gradient(to right, var(--color1) 0%, var(--color2) 100%);
    filter: url(../img/pattern.png), progid:DXImageTransform.Microsoft.gradient(startColorstr=var(--color1), endColorstr=var(--color2), GradientType=1);
    /* url(../img/pattern.png) - это png картинка с прозрачностью, она стоит первой чтобы наложиться сверху на градиент, если порядок поменять, то градиент полностью перекроет png-картинку и её не будет видно */

    background-size: contain;
    /* Background-size: contain масштабирует фоновое изображение, чтобы оно целиком поместилось внутри элемента. При этом картинка может занять или всю ширину, или всю высоту */
}

/* Кнопка play: */
.itd_play {
    background-color: var(--color1);
    width: 60px;
    height: 60px;
    border-radius: 50%;
    /* чтобы получить круг */

    /* Для центрирования того, что будет внутри: */
    display: flex;
    justify-content: center;
    align-items: center;

    cursor: pointer;
    /* это чтобы при наведении оно выглядело как кнопка */
    margin: 30px auto;
    /* 30px сверху и снизу, auto по бокам выравнивает по центру */
    transition: all 0.2s;
}

.itd_play:hover {
    background-color: var(--color2);
}

.itd_triangle {
    margin-right: -3px;
    width: 0;
    height: 0;
    border-style: solid;
    border-width: 10px 0 10px 20px;
    border-color: transparent transparent transparent var(--bs-white);
    /* 3 раза прозрачный цвет, а в 4-ый раз --bs-white это бутстрап переменная, которая является просто белым цветом  */
    /* Я покажу как создать треугольник на CSS с помощью...
    https://dzen.ru/shorts/66ceff49b4db9e1ad475437e
    https://morphismail.github.io/myInstruments/*/
}

/* Кнопка Заказать */
.btn-itd {
    display: block;
    max-width: 200px;
    margin: 0 auto;
    padding: 8px 30px;
    color: var(--bs-white);
    background-color: var(--color2);
}

.btn-itd:hover {
    color: var(--bs-white);
    background-color: var(--color1);
}

/* О курсе */
.about,
.shedule,
.rewiews {
    /* светло-серый цвет фона */
    background-color: #eee;
}

/* цвет иконок */
.about i {
    font-size: 25px;

    /* цвет иконок делаем фиолетовым */
    color: var(--color2);
}

/*  кружок вокруг иконки */
.itd_circle {
    margin: 0 auto 15px;
    width: 70px;
    height: 70px;
    border: 3px solid var(--color2);
    border-radius: 50%;
    /* сделали из квадрата круг */

    /* далее отцентрируем все с помощью flex */
    display: flex;
    justify-content: center;
    /* горизонталь */
    align-items: center;
    /* вертикаль */
}

/* линия снизу */
.line {
    width: 100px;
    height: 3px;
    margin: 15px auto 30px;
    /* сверху 15, авто для центрирования, снизу 30 */
}

/* Для кого курс, зеленая рамка вокруг блоков с текстом*/
.forwhom h5 {
    padding: 50px 20px;
    border: 3px solid var(--color1);
}

/* Активный аккордеон */
.accordion-button:not(.collapsed) {
    color: var(--bs-white);
    /* цвет текста */
    background-color: var(--color2);
    /* цвет фона */
}

/* Для Bootstrap  v5.3.3 */
/* Класс отвечающий за иконку-галочку */
.accordion-button:not(.collapsed)::after {
    filter: invert(100%);
    /*
    invert() Инвертирует цвета изображения, как бы выворачивает их, превращая в противоположные. В результате получается что-то вроде негатива. Можно указать процент инверсии от 0% до 100%. При 100% цвета на картинке полностью инвертированы. Отрицательные значения или значения больше 100% не допускаются.

    invert(0%) - галочка черная (по умолчанию).
    invert(50%) - галочка серая, но светлее на 50%.
    invert(100%) - галочка белая.

    ПС: записать в этот css класс 'color: white' не работает.
    */
}

/* Об авторе */
.author {
    padding-bottom: 0; /* убираем лишний отступ снизу */
}

.itd_img {
    max-width: 260px;
}
